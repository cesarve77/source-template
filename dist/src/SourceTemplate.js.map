{"version":3,"sources":["../../src/SourceTemplate.js"],"names":["SourceTemplate","props","state","userData","template","showForm","editTemplate","data","getCode","onCopy","output","form","submit","onDownload","onSubmit","onUserData","Promise","resolve","onSubmitSuccess","sourceCode","element","document","createElement","setAttribute","encodeURI","name","click","then","console","log","catch","err","error","hideForm","setState","autoForm","onChange","e","captureCopy","copied","length","code","nextProps","height","width","display","$blockScrolling","defaultProps","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","propTypes","string","isRequired","object"],"mappings":"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","file":"SourceTemplate.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport {AutoForm, AutoFields, ErrorsField} from \"./AutoForm\";\nimport {Wrapper, Button} from './StyledComponets'\nimport AceEditor from 'react-ace'\nimport 'brace/mode/javascript';\nimport 'brace/theme/github';\nimport {copyTextToClipboard, getSchema, removeComments, solveTemplate} from \"./utils\";\n\n\nclass SourceTemplate extends Component {\n    constructor(props) {\n        super(props)\n        this.code = this.getCode(props.data)\n    }\n\n    state = {userData: this.props.userData, template: this.props.template, showForm: false, editTemplate: !this.props.data}\n\n    componentWillReceiveProps(nextProps) {\n        const {userData} = nextProps\n        if (userData) {\n            this.setState({userData})\n        }\n    }\n\n    getCode = (data) => {\n        return solveTemplate(this.state.template, data)\n    }\n\n    onCopy = () => {\n        this.output = 'copy'\n        this.form.submit()\n    }\n    onDownload = () => {\n        this.output = 'download'\n        this.form.submit()\n    }\n    onSubmit = (userData) => {\n        const {onUserData} = this.props\n        onUserData && onUserData(userData)\n        return Promise.resolve(this.getCode(userData))\n    }\n    onSubmitSuccess = (sourceCode) => {\n        if (this.output === 'download') {\n            const element = document.createElement('a');\n            element.setAttribute('href', 'data:text/text;charset=utf-8,' + encodeURI(removeComments(sourceCode)));\n            element.setAttribute('download', this.props.name);\n            element.click();\n        } else {\n            copyTextToClipboard(removeComments(sourceCode)).then(() => console.log('copied')).catch((err) => console.error(err))\n        }\n        this.hideForm()\n\n\n    }\n    hideForm = () => {\n        this.setState({showForm: false})\n    }\n    autoForm = () => {\n        const {template, userData} = this.state\n        return (\n            <Wrapper onCopy={this.onCopy} onDownload={this.onDownload} onClose={this.hideForm}>\n                <AutoForm\n                    ref={form => this.form = form}\n                    schema={getSchema(template)}\n                    model={{userData}}\n                    onSubmit={this.onSubmit}\n                    onSubmitSuccess={this.onSubmitSuccess}\n                >\n                    <AutoFields />\n                    <ErrorsField/>\n                    <br/>\n\n                </AutoForm>\n            </Wrapper>\n        )\n    }\n\n    onChange = (template, e) => {\n        this.setState({template})\n        const {onChange} = this.props\n        onChange && onChange(template, e)\n    }\n    captureCopy = (copied) => {\n        if (copied.length === this.code.length) this.showForm()\n    }\n    showForm = () => {\n        this.setState({showForm: true})\n    }\n\n    render() {\n        const {template, showForm, editTemplate} = this.state\n        const {data, ...props} = this.props\n        delete props.template\n        delete props.userData\n        return (\n            <div style={{height: props.height, width: props.width}}>\n                <AceEditor\n                    style={{display: `${!showForm && !editTemplate ? '' : 'none'}`}}\n                    onChange={this.onChange}\n                    editorProps={{$blockScrolling: true}}\n                    {...props}\n                    readOnly\n                    value={this.code}\n                    onCopy={this.captureCopy}\n                />\n                <AceEditor\n                    style={{display: `${!showForm && editTemplate ? '' : 'none'}`}}\n                    onChange={this.onChange}\n                    editorProps={{$blockScrolling: true}}\n                    {...props}\n                    value={template}\n                />\n                <br/>\n                {!showForm && !editTemplate && <Button onClick={() => this.setState({editTemplate: true})}>Edit template</Button>}\n                {!showForm && editTemplate && <Button onClick={() => this.setState({editTemplate: false})}>Show code</Button>}\n                {!showForm && <Button onClick={this.showForm}>Get code</Button>}\n                {showForm && this.autoForm()}\n            </div>\n\n        )\n    }\n\n    static defaultProps = {\n        name: 'file.js',\n        mode: \"javascript\",\n        theme: \"github\",\n        fontSize: 14,\n        showPrintMargin: true,\n        showGutter: true,\n        highlightActiveLine: true,\n        height: '500px',\n        width: '100%'\n    }\n    static propTypes = {\n        template: PropTypes.string.isRequired,\n        data: PropTypes.object,\n        userData: PropTypes.object,\n\n\n    }\n}\n\nexport default SourceTemplate\n"]}